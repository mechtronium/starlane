[package]
name = "starlane-space"

description = """
Starlane --  (https://starlane.io)
# THE SPACE LIB
The 'Space' lib provides basic utilities and APIs for interacting with a Starlane cluster.
Other parts of Starlane actually build on the Space API in order to drive and control the Starlane Cluster.
The essential point of Starlane is that it can be extended with new functionality and the Space Api
is in most cases all that is needed to create a fully working Application.

Features, utilties and APIs provided by the Space lib include support for:
Configuration, Parsing, Type definitions, Access to the Starlane Registry, Access to the ArtifactCache, and much more.

Within the lib exists the Space API which is essential for Starlane to fulfill it's primary goal:

'To enable developers to focus on an application's VALUE ADDING CODE by reducing or eliminating the need to struggle
with the infrastructure code that supports the value adding code.'

# THE HYPERSPACE LIB
Space is better understood when compared to the other main Starlane lib and api 'HyperSpace'

HyperSpace IS the shadow lib that magically provides the support infrastructure for the Space lib.  Within HyperSpace
exists the 'TypeDrivers' and 'Foundation Service' code that supports 'Space'.  If there is need a developer can
create a custom Driver in order to supply some feature aspect that Starlane doesn't presently provide... of course
writing a Driver means writing infrastructure support code which is what we are trying to avoid.  Luckily Starlane
provides a central artifact repository: 'https://hub.starlane.io' where 3rd parties can create new HyperSpace drivers
which the application developer can easily install to extend his Starlane Cluster. For more info see:
https://crates.io/crates/starlane-hyperspace

"""

version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]


[dependencies]
starlane-macros = { workspace = true, version = "0.3.21" }
thiserror = { workspace = true }
lazy_static = { workspace = true }
uuid = { workspace = true, features = ["v4"] }
chrono = { workspace = true, features = ["serde"] }
tokio = { workspace = true, features = ["full"] }
tokio-util = { workspace = true }
eyre = { workspace = true }
indexmap = { workspace = true }

async-trait = { workspace = true }
ctrlc = { workspace = true }
bincode = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
remote-trait-object = { workspace = true }
wasmer = { workspace = true }
wasmer-compiler-singlepass = { workspace = true }
wasmer-wasix = { workspace = true }
itertools = { workspace = true }
#acid-store = {git="https://github.com/uberscott/acid-store.git" , version="0.14.2" }
tempdir = { workspace = true }
shadow-rs = { workspace = true, features = ["metadata"] }
once_cell = { workspace = true }
zip = { workspace = true, optional = true }
dirs = { workspace = true }
ascii = { workspace = true }
url = { workspace = true }
serde_with = { workspace = true }
serde_with_macros = { workspace = true }
erased-serde = { workspace = true }
inventory = { workspace = true }
typetag = { workspace = true }
# hyper requirements
futures = { workspace = true, default-features = true, optional = true }
dashmap = { workspace = true, optional = true }
semver = { workspace = true, features = ['serde'], optional = true }



# postgres deps
sqlx = { workspace = true, features = ["runtime-tokio", "runtime-tokio-rustls", "postgres", "macros", "any"], optional = true }
serde = { workspace = true, features = ['derive', 'rc'], optional = true }
async-recursion = { workspace = true, optional = true }

md-5 = { workspace = true }


rcgen = { workspace = true, optional = true, features = ["pem", "x509-parser"] }
rustls = { workspace = true, optional = true, features = ["aws_lc_rs"] }
rustls-pemfile = { workspace = true, optional = true }
tokio-rustls = { workspace = true, optional = true }
tls-api-rustls = { workspace = true, optional = true }

text_io = { workspace = true, optional = true }
clap = { workspace = true, optional = true, features = ["derive"] }
walkdir = { workspace = true, optional = true }

ariadne = { workspace = true, optional = true }
nom = { workspace = true, optional = true }
nom-supreme = { workspace = true, optional = true }
nom_locate = { workspace = true, optional = true }
regex = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
serde_urlencoded = { workspace = true, optional = true }
enum-ordinalize = { workspace = true, optional = true }
convert_case = { workspace = true, optional = true }
validator = { workspace = true, optional = true }
bollard = { workspace = true, optional = true }
downcast-rs = { workspace = true }





anyhow = { workspace = true, optional = true }
##virtual-fs ={ workspace = true, optional = true }

quinn = { workspace = true, optional = true }
webpki-roots = { workspace = true }
path-clean = { workspace = true }
thiserror-context = { workspace = true }
rustyline = { workspace = true, features = ["with-file-history", "with-dirs"] }
cliclack = { workspace = true }

serde_yaml = { workspace = true, optional = true }
derive_builder = { workspace = true }
postgresql_embedded = { workspace = true, optional = true }
text-to-ascii-art = { workspace = true }
colored = { workspace = true }
lerp = { workspace = true, features = ["derive"] }
atty = { workspace = true }
#rolling-file = {workspace = true}
termsize = { workspace = true }
port_check = { workspace = true }
crossterm = { workspace = true }
#log= {workspace = true}
textwrap = { workspace = true }
console = { workspace = true }
derive-name = { workspace = true }

#tracing = { workspace = true, features=["std","log","attributes","tracing-attributes","max_level_trace"]}
tracing = { workspace = true, features = ["std", "log", "attributes", "tracing-attributes", "async-await"] }

tracing-subscriber = { workspace = true, features = ["default"] }
tracing-attributes = { workspace = true, features = ["async-await"] }
tracing-core = { workspace = true, features = ["valuable", "default"] }
dyn-clone = { workspace = true }

[build-dependencies]
shadow-rs = { workspace = true }


[lib]
name = "starlane"
path = "src/lib.rs"

